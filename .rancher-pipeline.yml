stages:
- name: get-latest-binary
  steps:
  - runScriptConfig:
      image: alpine
      shellScript: |-
        echo "I will get the latest binary version!"

        mkdir /binaries
        mount -o vers=4 -t nfs ${NFS_SERVER} /binaries

        echo "full files here"
        ls -l -t /binaries
        
        echo "latest binary file"
        binary_latest=`ls -l -t /binarie | grep ${BINARY_REGEX} | awk 'NR==1{print $9}'`
        echo ${binary_latest}
        
        cp /binaries/${binary_latest} ${BINARY_NAME}

        echo "yes! I got it, you can check it here"
        
        sleep 600
    env:
      BINARY_NAME: 2048.war
      BINARY_REGEX: 2048-.*war
      NFS_SERVER: 106.14.165.228:/binaries
    privileged: true
- name: build
  steps:
  - publishImageConfig:
      dockerfilePath: ./Dockerfile
      buildContext: .
      tag: satomic/2048:${CICD_EXECUTION_SEQUENCE}
- name: deploy
  steps:
  - applyYamlConfig:
      path: ./deployment.yaml
timeout: 60
notification: {}
